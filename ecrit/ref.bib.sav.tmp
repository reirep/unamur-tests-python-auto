@Book{fuzzingbook2021,
  title        = {The Fuzzing Book},
  publisher    = {CISPA Helmholtz Center for Information Security},
  year         = {2021},
  author       = {Andreas Zeller and Rahul Gopinath and Marcel B{\"o}hme and Gordon Fraser and Christian Holler},
  note         = {Retrieved 2021-10-26 15:30:20+02:00},
  howpublished = {\url{https://www.fuzzingbook.org/beta/}},
  url          = {https://www.fuzzingbook.org/beta/},
  urldate      = {2021-10-26 15:30:20+02:00},
}

@Article{Fraser2014,
  author    = {Gordon Fraser and Andrea Arcuri},
  journal   = {{ACM} Transactions on Software Engineering and Methodology},
  title     = {A Large-Scale Evaluation of Automated Unit Test Generation Using {EvoSuite}},
  year      = {2014},
  month     = dec,
  number    = {2},
  pages     = {1--42},
  volume    = {24},
  doi       = {10.1145/2685612},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Leitner2007,
  author    = {Andreas Leitner and Manuel Oriol and Andreas Zeller and Ilinca Ciupa and Bertrand Meyer},
  booktitle = {Proceedings of the twenty-second {IEEE}/{ACM} international conference on Automated software engineering - {ASE} {\textquotesingle}07},
  title     = {Efficient unit test case minimization},
  year      = {2007},
  publisher = {{ACM} Press},
  doi       = {10.1145/1321631.1321698},
}

@InProceedings{4639353,
  author    = {Taneja, Kunal and Xie, Tao},
  title     = {DiffGen: Automated Regression Unit-Test Generation},
  booktitle = {2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2008},
  pages     = {407-410},
  doi       = {10.1109/ASE.2008.60},
}

@InProceedings{Arcuri2014,
  author    = {Andrea Arcuri and Gordon Fraser and Juan Pablo Galeotti},
  booktitle = {Proceedings of the 29th {ACM}/{IEEE} international conference on Automated software engineering},
  title     = {Automated unit test generation for classes with environment dependencies},
  year      = {2014},
  month     = sep,
  publisher = {{ACM}},
  doi       = {10.1145/2642937.2642986},
}

@InProceedings{7102595,
  author    = {Mirshokraie, Shabnam and Mesbah, Ali and Pattabiraman, Karthik},
  title     = {JSEFT: Automated Javascript Unit Test Generation},
  booktitle = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  year      = {2015},
  pages     = {1-10},
  doi       = {10.1109/ICST.2015.7102595},
}

@Article{Fraser2015,
  author    = {Gordon Fraser and Matt Staats and Phil McMinn and Andrea Arcuri and Frank Padberg},
  journal   = {{ACM} Transactions on Software Engineering and Methodology},
  title     = {Does Automated Unit Test Generation Really Help Software Testers? A Controlled Empirical Study},
  year      = {2015},
  month     = sep,
  number    = {4},
  pages     = {1--49},
  volume    = {24},
  doi       = {10.1145/2699688},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Rojas2015,
  author    = {Jos{\'{e}} Miguel Rojas and Gordon Fraser and Andrea Arcuri},
  booktitle = {Proceedings of the 2015 International Symposium on Software Testing and Analysis},
  title     = {Automated unit test generation during software development: a controlled experiment and think-aloud observations},
  year      = {2015},
  month     = jul,
  publisher = {{ACM}},
  doi       = {10.1145/2771783.2771801},
}

@Article{Godefroid2012,
  author    = {Patrice Godefroid and Michael Y. Levin and David Molnar},
  journal   = {Communications of the {ACM}},
  title     = {{SAGE}: Whitebox Fuzzing for Security Testing},
  year      = {2012},
  month     = mar,
  number    = {3},
  pages     = {40--44},
  volume    = {55},
  doi       = {10.1145/2093548.2093564},
  publisher = {Association for Computing Machinery ({ACM})},
}

@Article{Godefroid2020,
  author    = {Patrice Godefroid},
  journal   = {Communications of the {ACM}},
  title     = {Fuzzing},
  year      = {2020},
  month     = jan,
  number    = {2},
  pages     = {70--76},
  volume    = {63},
  doi       = {10.1145/3363824},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Wang2018,
  author    = {Xinyu Wang and Jun Sun and Zhenbang Chen and Peixin Zhang and Jingyi Wang and Yun Lin},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering},
  title     = {Towards optimal concolic testing},
  year      = {2018},
  month     = may,
  publisher = {{ACM}},
  doi       = {10.1145/3180155.3180177},
}

@InProceedings{Qu2011,
  author    = {Xiao Qu and Brian Robinson},
  booktitle = {2011 International Symposium on Empirical Software Engineering and Measurement},
  title     = {A Case Study of Concolic Testing Tools and their Limitations},
  year      = {2011},
  month     = sep,
  publisher = {{IEEE}},
  doi       = {10.1109/esem.2011.20},
}

@InProceedings{Majumdar2007,
  author    = {Rupak Majumdar and Koushik Sen},
  booktitle = {29th International Conference on Software Engineering ({ICSE}{\textquotesingle}07)},
  title     = {Hybrid Concolic Testing},
  year      = {2007},
  month     = may,
  publisher = {{IEEE}},
  doi       = {10.1109/icse.2007.41},
}

@InProceedings{Sen2007,
  author    = {Koushik Sen},
  booktitle = {Proceedings of the twenty-second {IEEE}/{ACM} international conference on Automated software engineering - {ASE} {\textquotesingle}07},
  title     = {Concolic testing},
  year      = {2007},
  publisher = {{ACM} Press},
  doi       = {10.1145/1321631.1321746},
}

@InCollection{Paraskevopoulou2015,
  author    = {Zoe Paraskevopoulou and C{\u{a}}t{\u{a}}lin Hri{\c{t}}cu and Maxime D{\'{e}}n{\`{e}}s and Leonidas Lampropoulos and Benjamin C. Pierce},
  booktitle = {Interactive Theorem Proving},
  publisher = {Springer International Publishing},
  title     = {Foundational Property-Based Testing},
  year      = {2015},
  pages     = {325--343},
  doi       = {10.1007/978-3-319-22102-1_22},
}

@InProceedings{Papadakis2011,
  author    = {Manolis Papadakis and Konstantinos Sagonas},
  booktitle = {Proceedings of the 10th {ACM} {SIGPLAN} workshop on Erlang - Erlang {\textquotesingle}11},
  title     = {A {PropEr} integration of types and function specifications with property-based testing},
  year      = {2011},
  publisher = {{ACM} Press},
  doi       = {10.1145/2034654.2034663},
}

@Article{Fink1997,
  author    = {George Fink and Matt Bishop},
  journal   = {{ACM} {SIGSOFT} Software Engineering Notes},
  title     = {Property-based testing},
  year      = {1997},
  month     = jul,
  number    = {4},
  pages     = {74--80},
  volume    = {22},
  doi       = {10.1145/263244.263267},
  publisher = {Association for Computing Machinery ({ACM})},
}

@Article{Avresky1996,
  author    = {D. Avresky and J. Arlat and J.-C. Laprie and Y. Crouzet},
  journal   = {{IEEE} Transactions on Reliability},
  title     = {Fault injection for formal testing of fault tolerance},
  year      = {1996},
  number    = {3},
  pages     = {443--455},
  volume    = {45},
  doi       = {10.1109/24.537015},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@Article{Marinescu2011,
  author    = {Paul D. Marinescu and George Candea},
  journal   = {{ACM} Transactions on Computer Systems},
  title     = {Efficient Testing of Recovery Code Using Fault Injection},
  year      = {2011},
  month     = dec,
  number    = {4},
  pages     = {1--38},
  volume    = {29},
  doi       = {10.1145/2063509.2063511},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Segall,
  author    = {Z. Segall and D. Vrsalovic and D. Siewiorek and D. Ysskin and J. Kownacki and J. Barton and R. Dancey and A. Robinson and T. Lin},
  booktitle = {Twenty-Fifth International Symposium on Fault-Tolerant Computing, 1995, {\textquotesingle} Highlights from Twenty-Five Years{\textquotesingle}.},
  title     = {{FlAT} -- Fault Injection Based Automated Testing Environment},
  publisher = {{IEEE}},
  doi       = {10.1109/ftcsh.1995.532663},
}

@InProceedings{Avgerinos2014,
  author    = {Thanassis Avgerinos and Alexandre Rebert and Sang Kil Cha and David Brumley},
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  title     = {Enhancing symbolic execution with veritesting},
  year      = {2014},
  month     = may,
  publisher = {{ACM}},
  doi       = {10.1145/2568225.2568293},
}

@Article{King1976,
  author    = {James C. King},
  journal   = {Communications of the {ACM}},
  title     = {Symbolic execution and program testing},
  year      = {1976},
  month     = jul,
  number    = {7},
  pages     = {385--394},
  volume    = {19},
  doi       = {10.1145/360248.360252},
  publisher = {Association for Computing Machinery ({ACM})},
}

@Article{Baldoni2019,
  author    = {Roberto Baldoni and Emilio Coppa and Daniele Cono D'elia and Camil Demetrescu and Irene Finocchi},
  journal   = {{ACM} Computing Surveys},
  title     = {A Survey of Symbolic Execution Techniques},
  year      = {2019},
  month     = may,
  number    = {3},
  pages     = {1--39},
  volume    = {51},
  doi       = {10.1145/3182657},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Cadar2011,
  author    = {Cristian Cadar and Patrice Godefroid and Sarfraz Khurshid and Corina S. P{\u{a}}s{\u{a}}reanu and Koushik Sen and Nikolai Tillmann and Willem Visser},
  booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
  title     = {Symbolic execution for software testing in practice},
  year      = {2011},
  month     = may,
  publisher = {{ACM}},
  doi       = {10.1145/1985793.1985995},
}

@InProceedings{Forrester2000,
  author    = {Forrester, Justin E. and Miller, Barton P.},
  title     = {An Empirical Study of the Robustness of Windows NT Applications Using Random Testing},
  booktitle = {Proceedings of the 4th Conference on USENIX Windows Systems Symposium - Volume 4},
  year      = {2000},
  series    = {WSS'00},
  pages     = {6},
  address   = {USA},
  publisher = {USENIX Association},
  abstract  = {We report on the third in a series of studies on the reliability of application programs in the face of random input. In 1990 and 1995, we studied the reliability of UNIX application programs, both command line and X-Window based (GUI). In this study, we apply our testing techniques to applications running on the Windows NT operating system. Our testing is simple black-box random input testing; by any measure, it is a crude technique, but it seems to be effective at locating bugs in real programs.We tested over 30 GUI-based applications by subjecting them to two kinds of random input: (1) streams of valid keyboard and mouse events and (2) streams of random Win32 messages. We have built a tool that helps automate the testing of Windows NT applications. With a few simple parameters, any application can be tested.Using our random testing techniques, our previous UNIX-based studies showed that we could crash a wide variety of command-line and X-window based applications on several UNIX platforms. The test results are similar for NT-based applications. When subjected to random valid input that could be produced by using the mouse and keyboard, we crashed 21% of applications that we tested and hung an additional 24% of applications. When subjected to raw random Win32 messages, we crashed or hung all the applications that we tested. We report which applications failed under which tests, and provide some analysis of the failures.},
  location  = {Seattle, Washington},
  numpages  = {1},
}

@Book{howard2006security,
  title     = {The security development lifecycle},
  publisher = {Microsoft Press Redmond},
  year      = {2006},
  author    = {Howard, Michael and Lipner, Steve},
  volume    = {8},
}

@InCollection{fuzzingbook2022:GreyboxFuzzer,
  author       = {Andreas Zeller and Rahul Gopinath and Marcel B{\"o}hme and Gordon Fraser and Christian Holler},
  title        = {Greybox Fuzzing},
  booktitle    = {The Fuzzing Book},
  publisher    = {CISPA Helmholtz Center for Information Security},
  year         = {2022},
  note         = {Retrieved 2022-01-23 17:13:33+01:00},
  howpublished = {\url{https://www.fuzzingbook.org/html/GreyboxFuzzer.html}},
  url          = {https://www.fuzzingbook.org/html/GreyboxFuzzer.html},
  urldate      = {2022-01-23 17:13:33+01:00},
}

@InCollection{fuzzingbook2022:GreyboxGrammarFuzzer,
  author       = {Andreas Zeller and Rahul Gopinath and Marcel B{\"o}hme and Gordon Fraser and Christian Holler},
  title        = {Greybox Fuzzing with Grammars},
  booktitle    = {The Fuzzing Book},
  publisher    = {CISPA Helmholtz Center for Information Security},
  year         = {2022},
  note         = {Retrieved 2022-01-11 09:26:47+01:00},
  howpublished = {\url{https://www.fuzzingbook.org/html/GreyboxGrammarFuzzer.html}},
  url          = {https://www.fuzzingbook.org/html/GreyboxGrammarFuzzer.html},
  urldate      = {2022-01-11 09:26:47+01:00},
}

@Book{sutton2007fuzzing,
  title     = {Fuzzing: brute force vulnerability discovery},
  publisher = {Pearson Education},
  year      = {2007},
  author    = {Sutton, Michael and Greene, Adam and Amini, Pedram},
}

@Misc{peach,
  title        = {{I}ntegrating security into your {D}ev{O}ps {L}ifecycle --- peachfuzzer.com},
  howpublished = {\url{http://www.peachfuzzer.com/}},
  note         = {[Accessed 18-Apr-2022]},
}

@Misc{spike,
  title        = {{F}uzzer {A}utomation with {S}{P}{I}{K}{E} - {I}nfosec {R}esources --- resources.infosecinstitute.com},
  howpublished = {\url{https://resources.infosecinstitute.com/topic/fuzzer-automation-with-spike/}},
  note         = {[Accessed 18-Apr-2022]},
}

@Misc{sulley,
  title        = {{G}it{H}ub - {O}pen{R}{C}{E}/sulley: {A} pure-python fully automated and unattended fuzzing framework. --- github.com},
  howpublished = {\url{https://github.com/OpenRCE/sulley}},
  note         = {[Accessed 18-Apr-2022]},
}

@InProceedings{holler2012fuzzing,
  author    = {Holler, Christian and Herzig, Kim and Zeller, Andreas},
  title     = {Fuzzing with code fragments},
  booktitle = {21st USENIX Security Symposium (USENIX Security 12)},
  year      = {2012},
  pages     = {445--458},
}

@InProceedings{yang2011finding,
  author    = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
  title     = {Finding and understanding bugs in C compilers},
  booktitle = {Proceedings of the 32nd ACM SIGPLAN conference on Programming language design and implementation},
  year      = {2011},
  pages     = {283--294},
}

@Misc{aflnet,
  title        = {GitHub - aflnet/aflnet: AFLNet},
  howpublished = {\url{https://github.com/aflnet/aflnet}},
  note         = {[Accessed 18-Apr-2022]},
}

@Article{bastani2017synthesizing,
  author    = {Bastani, Osbert and Sharma, Rahul and Aiken, Alex and Liang, Percy},
  title     = {Synthesizing program input grammars},
  journal   = {ACM SIGPLAN Notices},
  year      = {2017},
  volume    = {52},
  number    = {6},
  pages     = {95--110},
  publisher = {ACM New York, NY, USA},
}

@InProceedings{hoschele2017mining,
  author       = {Hoschele, Matthias and Zeller, Andreas},
  title        = {Mining input grammars with AUTOGRAM},
  booktitle    = {2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)},
  year         = {2017},
  pages        = {31--34},
  organization = {IEEE},
}

@InProceedings{godefroid2008automated,
  author    = {Godefroid, Patrice and Levin, Michael Y and Molnar, David A and others},
  title     = {Automated whitebox fuzz testing.},
  booktitle = {NDSS},
  year      = {2008},
  volume    = {8},
  pages     = {151--166},
}

@InProceedings{cadar2005execution,
  author       = {Cadar, Cristian and Engler, Dawson},
  title        = {Execution generated test cases: How to make systems code crash itself},
  booktitle    = {International SPIN Workshop on Model Checking of Software},
  year         = {2005},
  pag